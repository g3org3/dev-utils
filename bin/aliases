#!/bin/bash

alias l=ls\ -lh
alias la=ls\ -lAh


## Git
alias gis=git\ status
alias gic=git\ checkout
alias gcp=git\ cherry-pick
alias gib=git\ branch
alias push=git\ push
alias pull=git\ pull
alias fetch=git\ fetch
alias undo-commit="git reset --soft HEAD~1"
alias glog="git log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit"


## Docker
alias dc=docker-compose


## Extras
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'


## Specific for this repo
alias ja='~/code/dev-utils/.direnv/python-3.9.7/bin/python ~/code/dev-utils/bin/ja'
alias cddotfiles=cd\ ~/.dotfiles


## Functions
cs() {
	DIR=${1:-.}
	LEVEL=${2:-1}
  cd "$DIR" && clear && echo $(pwd) && tree -L "$LEVEL";
}

back() {
	LEVEL=${1:-1}
	cd .. && clear && tree -L "$LEVEL";
}

count_commits() {
	BRANCH=${1:-'master'}
	git rev-list "$BRANCH".. --count
}

copy() {
	xclip -i -selection clipboard $1;
}

function cd() {
  builtin cd "$@";

  if [ -f .env ]; then
    pwd=$(pwd)

    if [ -f example.env ]; then
      exampledotenv=$(cat example.env | grep = | sed s.=.\ .g | awk '{print $1}')
      dotenv=$(cat .env | grep = | sed s.=.\ .g | awk '{print $1}')
      diffs=`diff <(echo "$exampledotenv") <(echo "$dotenv") -q`

      if [ -n "$diffs" ]; then
        echo -e "\n\e[31myour .env doesn't match with the example.env\nmake sure is up to date\e[0m"
      fi
    fi

    #echo "ja: loading $pwd/.env";
    #export $(cat .env | grep "=" | xargs)

    #vars=$(cat .env | grep = | sed s.=.\ .g | awk '{print $1}' | sed -z 's/\n/\ +/g')
    #echo "ja: export +${vars}";
  fi
}

alias debt='grep --exclude-dir={debt.js,coverage,.azurite-data,.db-data,.db-mysql-matomo-data,.direnv,.git,.matomo-html,.sonarqube-data,bkp,build,Makefile,node_modules,target} -rnw ~/code/cs.cfc_connect -e "@debt"'
alias hacks='grep --exclude-dir={debt.js,coverage,.azurite-data,.db-data,.db-mysql-matomo-data,.direnv,.git,.matomo-html,.sonarqube-data,bkp,build,Makefile,node_modules,target} -rnw ~/code/cs.cfc_connect -e "@hack"'
alias ss='grep --exclude-dir={coverage,.azurite-data,.db-data,.db-mysql-matomo-data,.direnv,.git,.matomo-html,.sonarqube-data,bkp,build,Makefile,node_modules,target} -rnw ~/code/cs.cfc_connect -e '

fg () {
  grep --color=auto --exclude-dir={.bzr,CVS,.git,.hg,.svn,.idea,.tox} --color=auto -rnw './' -e "$1"
}

ff () {
  find . -name "$1"
}
